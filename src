#!/bin/sh
version='10'
#the following is the message of the day (MOTD). I feel the majority users will be students who require something fun/weird to begin a stressfull day.
#is plain text; is generated based on your NAME and OS. It uses the FORTUNE and COWSAY packages and a custom script that run on my server (IPv$ 46.4.114.111) so that you dont have to install them.
#checks if the http request is from zoombie from the "ZoombieV"$version" part; i know its a bad implementation but im lazy TwT
motd=$(curl -A "ZoombieV"$version", "$OSTYPE", "$USER"" -s 46.4.114.111:6999/motd)
#the following are the escape characters for colors
no='\e[0m'
bld='\e[1m'
und='\e[4m'
a='\e[38;5;69m'
b='\e[38;5;49m'
c='\e[38;5;207m'
d='\e[38;5;227m'
e='\e[38;5;198m'
f='\e[38;5;83m'
g='\e[38;5;218m'
i='\e[38;5;252m'
j='\e[38;5;99m'
k='\e[38;5;47m'
#a wait function that ensures continuity of theme
wait()
{
	printf "%b" "${c}[${a}"$dt"${c}] ${b}${bld}Waiting for the next meeting...${no}"
	sleep 60
	printf "%b" "\r"
}
clear
#zoombie ascii art
printf "%b" "
${i}▒███████▒ ▒█████   ▒█████   ███▄ ▄███▓ ▄▄▄▄    ██▓▓█████
▒ ▒ ▒ ▄▀░▒██▒  ██▒▒██▒  ██▒▓██▒▀█▀ ██▒▓█████▄ ▓██▒▓█   ▀ 
░ ▒ ▄▀▒░ ▒██░  ██▒▒██░  ██▒▓██    ▓██░▒██▒ ▄██▒██▒▒███   
  ▄▀▒   ░▒██   ██░▒██   ██░▒██    ▒██ ▒██░█▀  ░██░▒▓█  ▄ 
▒███████▒░ ████▓▒░░ ████▓▒░▒██▒   ░██▒░▓█  ▀█▓░██░░▒████▒
░▒▒ ▓░▒░▒░ ▒░▒░▒░ ░ ▒░▒░▒░ ░ ▒░   ░  ░░▒▓███▀▒░▓  ░░ ${k}${bld}V${version}${no}${i}
░░▒ ▒ ░ ▒  ░ ▒ ▒░   ░ ▒ ▒░ ░  ░      ░▒░▒   ░  ▒ ░ ░ ░  ░
░ ░ ░ ░ ░░ ░ ░ ▒  ░${j}written by DaBigBlob @github${i}▒ ░   ░   
  ░ ░        ░ ░      ░ ░         ░    ░       ░     ░  ░
░                                           ░          
"
#printing the MOTD
printf "%b" "\n${motd}${no}\n"
#printing a handy list of meetings
printf "%b" "\n${e}[*]${f}Reading the zoom-meetings.txt file...${no}\n"
cat zoom-meetings.txt
printf "%b" "${e}[#]${f}Done.${no}\n\n"
#print the starting time
printf "%b" "${e}[*]${f}Starting at ${a}"$(date +%I:%M%p)" and "$(date +%S)" sec${f}...${no}\n\n"
#start an indefinite loo
while [ 1 ]
do
	#date for time keeping
	dt=$(date +%I:%M%p)
	#parsing the link from your zoom-meeting.txt
	lnk=$(cat zoom-meetings.txt | grep $dt | cut -d' ' -f 2)
	if [ $lnk ]
	then
		#meeting id
		mtnid=$(echo $lnk | cut -d'/' -f 5 | cut -d'?' -f 1)
		#password hash
		pwdhsh=$(echo $lnk | cut -d'=' -f 2)
		#zoom domain
		dom=$(echo $lnk | cut -d'/' -f 3)
		#different implementation for different OS type
		case "$OSTYPE" in
			solaris*|*linux*|*BSD*) xdg-open "zoommtg://"$dom"/join?action=join&confno="$mtnid"&pwd="$pwdhsh;;
			darwin*) open "zoommtg://"$dom"/join?action=join&confno="$mtnid"&pwd="$pwdhsh;;
			msys*|cygwin*) start "zoommtg://"$dom"/join?action=join&confno="$mtnid"&pwd="$pwdhsh;;       		
			*) printf "%b" "\n\n${e}UNKNOWN OS DETECTED: The following attempt to start a meeting might fail.${no}" ;;
		esac
		#declared separately coz why not
		topic=$(cat zoom-meetings.txt | grep $dt | cut -d'"' -f 2)
		#what to print when starting a meeting
		printf "%b" "${c}[${a}"$dt"${c}] ${d}Starting meeting...${no}                              \n"
		printf "%b" "${e}${bld}████████████████████████████████████████████████████████████████████████████████████${no}\n"
		printf "%b" "${e}${bld}██${no} ${f}${bld}SET TIME: ${g}"$(cat zoom-meetings.txt | grep $dt | cut -d' ' -f 1)"${no}\n"
		printf "%b" "${e}${bld}██${no} ${f}${bld}TOPIC: ${g}${topic}${no}\n"
		printf "%b" "${e}${bld}██${no} ${f}${bld}MEETING ID: ${g}"$mtnid"${no}\n"
		printf "%b" "${e}${bld}██${no} ${f}${bld}LINK: ${g}"$lnk"${no}\n"
		printf "%b" "${e}${bld}████████████████████████████████████████████████████████████████████████████████████${no}\n"
		printf "%b" "${c}[${a}"$dt"${c}] ${d}Job done for now. ${f}uwu${no}\n\n\n"
		wait
	else
		wait
	fi
done
